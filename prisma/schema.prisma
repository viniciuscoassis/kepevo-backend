generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workout {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  title           String            @db.VarChar(255)
  userId          Int
  Owner           User              @relation(fields: [userId], references: [id])
  WorkoutExercise WorkoutExercise[]
}

model WorkoutExercise {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  workoutId      Int
  muscleGroupId  Int
  name           String
  MuscleGroups   MuscleGroups     @relation(fields: [muscleGroupId], references: [id])
  Workout        Workout          @relation(fields: [workoutId], references: [id])
  WeightsHistory WeightsHistory[]
}

model WeightsHistory {
  id         Int             @id @default(autoincrement())
  value      Int
  exerciseId Int
  Exercise   WorkoutExercise @relation(fields: [exerciseId], references: [id])
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model MuscleGroups {
  id              Int               @id @default(autoincrement())
  name            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  WorkoutExercise WorkoutExercise[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
  Workout   Workout[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}
